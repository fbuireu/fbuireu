name: 'Create and Auto-merge PR'
description: 'Creates a pull request and automatically merges it if successful'
author: 'fbuireu'
inputs:
  token:
    description: 'GitHub token for authentication'
    required: true
    default: ${{ github.token }}
  commit-message:
    description: 'Commit message for the PR'
    required: false
    default: 'docs: update repository assets'
  title:
    description: 'Title of the pull request'
    required: false
    default: 'ðŸ¤– [AUTOMATED] Update Repository Assets'
  branch:
    description: 'Branch name for the pull request'
    required: false
    default: 'auto-update-${{ github.run_number }}'
  force-merge:
    description: 'Force merge without waiting for checks (use with caution)'
    required: false
    default: 'false'
  max-retries:
    description: 'Maximum number of retries for merge attempts'
    required: false
    default: '3'
  retry-delay:
    description: 'Delay in seconds between retry attempts'
    required: false
    default: '10'
outputs:
  pull-request-number:
    description: 'The number of the created pull request'
    value: ${{ steps.create-pr.outputs.pull-request-number || steps.retry-pr.outputs.pull-request-number }}
  pull-request-operation:
    description: 'The operation performed (created, updated, or none)'
    value: ${{ steps.create-pr.outputs.pull-request-operation || steps.retry-pr.outputs.pull-request-operation }}
runs:
  using: 'composite'
  steps:
    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v7
      continue-on-error: true
      with:
        token: ${{ inputs.token }}
        commit-message: ${{ inputs.commit-message }}
        title: ${{ inputs.title }}
        body: |
          ## Automated Repository Update
          
          This PR contains updated assets generated automatically.
          
          **Generated on:** ${{ github.run_id }}
          **Workflow:** ${{ github.workflow }}
          **Triggered by:** ${{ github.event_name }}
          
          ---
          *This PR was created automatically and will be auto-merged if all checks pass.*
        branch: ${{ inputs.branch }}
        delete-branch: true
        base: main

    - name: Wait before retry
      if: steps.create-pr.outcome == 'failure'
      shell: bash
      run: sleep 45

    - name: Retry Create Pull Request
      id: retry-pr
      if: steps.create-pr.outcome == 'failure'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        commit-message: ${{ inputs.commit-message }}
        title: ${{ inputs.title }}
        body: |
          ## Automated Repository Update
          
          This PR contains updated assets generated automatically.
          
          **Generated on:** ${{ github.run_id }}
          **Workflow:** ${{ github.workflow }}
          **Triggered by:** ${{ github.event_name }}
          
          ---
          *This PR was created automatically and will be auto-merged if all checks pass.*
        branch: ${{ inputs.branch }}
        delete-branch: true
        base: main

    - name: Set PR vars
      shell: bash
      run: |
        if [ -n "${{ steps.create-pr.outputs.pull-request-number }}" ]; then
          echo "PR_NUM=${{ steps.create-pr.outputs.pull-request-number }}" >> $GITHUB_ENV
        else
          echo "PR_NUM=${{ steps.retry-pr.outputs.pull-request-number }}" >> $GITHUB_ENV
        fi

    - name: Wait for PR to be ready
      if: env.PR_NUM != ''
      shell: bash
      run: sleep 5
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Auto-merge PR
      if: env.PR_NUM != '' && inputs.force-merge == 'false'
      shell: bash
      run: |
        PR_NUMBER="${{ env.PR_NUM }}"
        MAX_RETRIES=${{ inputs.max-retries }}
        RETRY_DELAY=${{ inputs.retry-delay }}
        
        for i in $(seq 1 $MAX_RETRIES); do
          PR_STATE=$(gh pr view ${PR_NUMBER} --json state --jq '.state' 2>/dev/null || echo "")
          
          if [ "$PR_STATE" = "MERGED" ]; then
            echo "âœ… PR is already merged!"
            exit 0
          fi
          
          if gh pr merge ${PR_NUMBER} --auto --squash --subject "${{ inputs.commit-message }}" 2>&1; then
            echo "âœ… Auto-merge enabled successfully!"
            exit 0
          else
            sleep $RETRY_DELAY
          fi
        done
        
        exit 1
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Force merge with admin privileges
      if: env.PR_NUM != '' && inputs.force-merge == 'true'
      shell: bash
      run: |
        PR_NUMBER="${{ env.PR_NUM }}"
        MAX_RETRIES=${{ inputs.max-retries }}
        RETRY_DELAY=${{ inputs.retry-delay }}
        
        for i in $(seq 1 $MAX_RETRIES); do
          PR_STATE=$(gh pr view ${PR_NUMBER} --json state --jq '.state' 2>/dev/null || echo "")
          
          if [ "$PR_STATE" = "MERGED" ]; then
            echo "âœ… PR is already merged!"
            exit 0
          fi
          
          if gh pr merge ${PR_NUMBER} --ad
